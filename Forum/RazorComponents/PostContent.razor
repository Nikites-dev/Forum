@using Forum.Services
@using System.Threading
@using Forum.MongoDB
@inject PostService PostService
@inject Forum.MongoDB.UserDbConnection userConnection

<div class="content">
    @if (_posts != null)
    {
        @foreach (var post in _posts)
        {
            <div class="postCard">
                <div class="leftSide">
                    @if (@post.Likes != null)
                    {
                        <p>@post.Likes.Count</p>
                    }
                    else
                    {
                        <p>0</p>
                    }
                    @if (userConnection.isLoginUser == null)
                    {
                        <button disabled="disabled" @onclick="(() => PutLike(post))">Like</button>
                    }
                    else
                    {
                        <button @onclick="(() => PutLike(post))">Like</button>    
                    }
                    
                </div>

                <div class="rightSide">
                    <div class="rowCard">
                        <p>@post.Username.ToString() * </p>
                        <p> posted by  @post.CreatePost.ToString()</p>
                    </div>
                    <div class="rowCard">
                        <p>@post.Text</p>
                    </div>
                    <div class="rowCard">
                        @if (post.Comments != null)
                        {
                            <button>@post.Comments.Count.ToString() Comments</button>
                        }
                        else
                        {
                            <button>add first comment</button>
                        }
                    </div>
                    
                </div>

            </div>
        }
    }
    
</div>


@code {
    List<Comment> comments;
    List<Post> _posts;
    
    protected override void OnInitialized()
    {
        StateHasChanged();
        _posts = PostService.GetPosts();

        DataUpdating();
    }

    public async Task DataUpdating()
    {
        while(true) {
            StateHasChanged();
            _posts = PostService.GetPosts();
            await Task.Delay(1000);
        }
    }

    void PutLike(Post post)
    {
        bool alreadyLike = false;
        if (post.Likes != null)
        {
            foreach (var likes in post.Likes)
            {
                if (likes == userConnection.isLoginUser.Username)
                {
                    alreadyLike = true;
                }
            }
        }

        if (alreadyLike == false)
        {
            post.Likes.Add(userConnection.isLoginUser.Username);
        }
        else
        {
            post.Likes.Remove(userConnection.isLoginUser.Username);
        }
        PostDbConnection.UpdatePost(post);
    }

}

