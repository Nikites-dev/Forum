@using Forum.Services
@using System.Threading
@using Forum.MongoDB
@inject PostService PostService
@inject BehaviourService BehaviourService
@inject Forum.MongoDB.UserDbConnection userConnection

<div class="content">
    @if (_posts != null)
    {
        @foreach (var post in _posts)
        {
            <div class="postCard">
                <div class="leftSide">
                    @if (@post.Likes != null)
                    {
                        <p>@post.Likes.Count</p>
                    }
                    else
                    {
                        <p>0</p>
                    }
                    @if (userConnection.isLoginUser == null)
                    {
                        <button disabled="disabled" @onclick="(() => PutLike(post))">Like</button>
                    }
                    else
                    {
                        <button @onclick="(() => PutLike(post))">Like</button>    
                    }
                </div>

                <div class="rightSide">
                    <div class="rowCard">
                        <p>@post.Username.ToString() * </p>
                        <p> posted by  @post.CreatePost.ToString()</p>
                    </div>
                    @if (post.Text.Length < 20)
                    {
                        <div class="rowCard">
                            <p style="font-size: 25px">@post.Text</p>
                        </div>  
                    } else if (post.Text.Length >= 20 && post.Text.Length <= 210)
                    {
                        <div class="rowCard">
                            <p style="font-size: 20px">@post.Text</p>
                        </div>   
                    }
                    else
                    {
                        <div class="rowCard">
                            <p style="font-size: 15px">@post.Text</p>
                        </div>   
                    }
                    @if (@post.NameImage != null)
                    {
                        <div class="rowCard">
                            @{
                                FileSystemService.DownloadToLocalByName(@post.NameImage);
                            }
                            ;
                            <img src="imgSource/@post.NameImage" alt="img"/>
                        </div>    
                    }
                      
                    
                    
                    <div class="rowCard">
                        @if (post.Comments != null)
                        {
                            <button @onclick="(() => CommmentRemote(post))">@post.Comments.Count.ToString() Comments</button>
                        }
                        else
                        {
                            <button @onclick="(() => CommmentRemote(post))">add first comment</button>
                        }
                    </div>
                </div>
            </div>
        }
    }
    <CommentPost PostChoose="@selectPost"/>
</div>

@code {
    List<Comment> comments;
    List<Post> _posts;
    bool hideCmntBtn = true;
    bool hideCmntComponent = false;
    Post selectPost = new Post(); 
    
    protected override void OnInitialized()
    {
        BehaviourService.isShowCommentContent = true;
        StateHasChanged();
        _posts = PostService.GetPosts();

        DataUpdating();
        
    }

    public async Task DataUpdating()
    {
        while(true) {
            StateHasChanged();
            _posts = PostService.GetPosts();
            await Task.Delay(500);
        }
    }

    void PutLike(Post post)
    {
        bool alreadyLike = false;
        if (post.Likes != null)
        {
            foreach (var likes in post.Likes)
            {
                if (likes == userConnection.isLoginUser.Username)
                {
                    alreadyLike = true;
                }
            }
        }

        if (alreadyLike == false)
        {
            post.Likes.Add(userConnection.isLoginUser.Username);
        }
        else
        {
            post.Likes.Remove(userConnection.isLoginUser.Username);
        }
        PostDbConnection.UpdatePost(post);
    }

    void CommmentRemote(Post post)
    {
        selectPost = post;
        BehaviourService.isShowCommentContent = false;
    }
}

