@using Forum.Services
@using Index = Forum.Pages.Index
@using System.ComponentModel.DataAnnotations
@using Forum.MongoDB
@inject BehaviourService BehaviourService
@inject UserDbConnection UserDbConnection
@inject Interests Interests
@inject NavigationManager NavigationManager

<div class="navbar">
    
    <div class="section">
        <p class="txtHeader">FEEDS</p>
        <div class="rowNav">
            <button class="btnNav" @onclick="NavigationHome">
                <div Match="NavLinkMatch.All">
                    <span><img src="icons/@GetIcon("Home")" width="18"alt="icon"/> </span> Home
                </div>
            </button>
        </div>
        
        <div class="rowNav">
            <button class="btnNav"  @onclick="NavigationProfile">
                <div Match="NavLinkMatch.All">
                    <span><img src="icons/@GetIcon("Star")" width="18"alt="icon"/> </span> Profile
                </div>
            </button>
        </div>
    </div>

    <div class="section">
        <p class="txtHeader">TOPICS</p>
        <div class="rowNav">
            <button class="btnNav" @onclick="() => SetInterest(strAll)">
                <div Match="NavLinkMatch.All">
                    <span><img src="icons/@GetIcon("All")" width="18"alt="icon"/> </span> All
                </div>
            </button>
        </div>

        @if (listInterests != null || listInterests.Count != 0)
        {
            @foreach (var interest in listInterests)
            {
                <div class="rowNav">
                    <button class="btnNav" @onclick="@(async() => { SetInterest(interest); await InvokeAsync(StateHasChanged);})">
                        <div Match="NavLinkMatch.All">
                            <span><img src="icons/@GetIcon(interest)" width="18"alt="icon"/> </span> @interest
                        </div>
                    </button>
                </div>
            }
        }
    </div>
</div>

@code {
    String str = "Finance";
    String strOI = "oi oi-star";
    String strAll = "";
    String crntFilter= "";
    List<String> listInterests = Models.Interests.GetListInterest();
    
    [Parameter]
    public String Filter{ get; set; }

    [Parameter]
    public Action<String> onDataChanged { get; set; }

    protected override void OnInitialized()
    {
        listInterests = Models.Interests.GetListInterest();
        Filter = "Funny";
    }

    void SetInterest(String nameInterest)
    {
        Filter = nameInterest;
        onDataChanged?.Invoke(Filter);
    }

    String GetIcon(String name)
    {
        return name + ".svg";
    }
    public delegate void OnTopicSelectDelegate();
    public event OnTopicSelectDelegate OnTopicSelect;

    void NavigationHome()
    {
        NavigationManager.NavigateTo("/");
    }
    
    void NavigationProfile()
    {
        if (UserDbConnection.isLoginUser != null)
        {
            NavigationManager.NavigateTo("profile");
        }
    }

}